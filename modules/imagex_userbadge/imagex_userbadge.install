<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 */


/**
 * Implements hook_schema().
 */
function imagex_userbadge_schema() {
  $schema = array();

  $schema['imagex_userbadge'] = array(
    'description' => 'The base table for badge entities.',
    'fields' => array(
      'badge_id' => array(
        'description' => 'Primary Key: Identifier for a badge.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {badge_type}.type of this badge.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The language of the badge.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The name of the badge - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the badge was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the badge was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uuid' => array(
        'description' => 'The uuid of the badge',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('badge_id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );
  $schema['imagex_userbadge_relationship'] = array(
    'description' => 'The base table for badge relationships.',
    'fields' => array(
      'badge_id' => array(
        'description' => 'Primary Key: Identifier for a badge.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {user}.uid of the user.',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('badge_id', 'uid'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function imagex_userbadge_install() { 
  if (module_exists('image')) {
    // Add or remove the body field, as needed.
    $field = field_info_field('badge_image');
    $instance = field_info_instance('imagex_userbadge', 'badge_image', 'badge');
    if (empty($field)) {
      $field = array(
        'field_name' => 'badge_image',
        'type' => 'image',
        'entity_types' => array('imagex_userbadge'),
      );
      $field = field_create_field($field);
    }
    if (empty($instance)) {
      $instance = array(
        'field_name' => 'badge_image',
        'entity_type' => 'imagex_userbadge',
        'bundle' => 'badge',
        'label' => 'Badge Image',
        'widget' => array('type' => 'image_image'),
        'settings' => array(
          'progress_indicator' => 'throbber',
          'preview_image_style' => 'thumbnail',
        ),
      );
      $instance = field_create_instance($instance);
    }
  }
  // Add or remove the body field, as needed.
  $field = field_info_field('badge_description');
  $instance = field_info_instance('imagex_userbadge', 'badge_description', 'badge');
  if (empty($field)) {
    $field = array(
      'field_name' => 'badge_description',
      'type' => 'text_with_summary',
      'entity_types' => array('imagex_userbadge'),
    );
    $field = field_create_field($field);
  }
  if (empty($instance)) {
    $instance = array(
      'field_name' => 'badge_description',
      'entity_type' => 'imagex_userbadge',
      'bundle' => 'badge',
      'label' => 'Description',
      'widget' => array('type' => 'text_textarea_with_summary'),
      'settings' => array('display_summary' => TRUE),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'text_summary_or_trimmed',
        ),
      ),
    );
    $instance = field_create_instance($instance);
  }
}